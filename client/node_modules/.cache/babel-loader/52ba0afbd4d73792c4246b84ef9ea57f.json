{"ast":null,"code":"var _jsxFileName = \"/docker_img_builder/client/src/components/SelectOS.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { changeName, changeTag, initializeForm } from '../actions';\nimport './App.css';\nimport { FormGroup } from '@material-ui/core';\n\nconst SelectOS = ({\n  store\n}) => {\n  const _store$getState$form = store.getState().form,\n        osName = _store$getState$form.osName,\n        osTag = _store$getState$form.osTag; // const fileName = osName + \"_\" + osTag + \".tar\";\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('/api/imgInfo', {\n      osName,\n      osTag\n    }).then(response => {\n      console.log(response);\n      store.dispatch(initializeForm());\n    }).catch(err => {\n      console.error(new Error(err));\n    });\n  };\n\n  const handleDownload = e => {\n    e.preventDefault();\n    axios.get('/api/download', {\n      responseType: 'blob',\n      params: {\n        osName,\n        osTag\n      }\n    }).then(response => {\n      const link = document.createElement('a');\n      const blob = new Blob([response.data]);\n      link.setAttribute('href', window.URL.createObjectURL(blob));\n      link.setAttribute('download', response.headers['content-disposition'].split('filename=')[1]);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      store.dispatch(initializeForm());\n    }).catch(err => {\n      console.error(new Error(err));\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"OS\"), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      type: \"radio\",\n      value: \"centos\",\n      checked: osName === 'centos',\n      onChange: () => store.dispatch(changeName(\"centos\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }),\n    label: \"CentOS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      type: \"radio\",\n      value: \"ubuntu\",\n      checked: osName === 'ubuntu',\n      onChange: () => store.dispatch(changeName(\"ubuntu\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }),\n    label: \"Ubuntu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"TAG\"), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      type: \"radio\",\n      value: \"latest\",\n      checked: osTag === 'latest',\n      onChange: () => store.dispatch(changeTag(\"latest\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }),\n    label: \"latest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"submit\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    type: \"button\",\n    onClick: e => handleDownload(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"download\"))));\n};\n\nexport default SelectOS;","map":{"version":3,"sources":["/docker_img_builder/client/src/components/SelectOS.js"],"names":["React","axios","Button","Checkbox","FormLabel","FormControl","FormControlLabel","changeName","changeTag","initializeForm","FormGroup","SelectOS","store","getState","form","osName","osTag","handleSubmit","e","preventDefault","post","then","response","console","log","dispatch","catch","err","error","Error","handleDownload","get","responseType","params","link","document","createElement","blob","Blob","data","setAttribute","window","URL","createObjectURL","headers","split","style","visibility","body","appendChild","click","removeChild"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport {\n    changeName, changeTag,\n    initializeForm\n } from '../actions'\nimport './App.css'\nimport { FormGroup } from '@material-ui/core'\n\nconst SelectOS = ({ store }) => {\n    const { osName, osTag } = store.getState().form;\n    // const fileName = osName + \"_\" + osTag + \".tar\";\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        axios.post('/api/imgInfo', {\n            osName,\n            osTag,\n        })\n        .then(response => {\n            console.log(response)\n            store.dispatch(initializeForm())\n        })\n        .catch(err => {\n            console.error(new Error(err))\n        })\n    }\n\n    const handleDownload = e => {\n        e.preventDefault();\n\n        axios.get('/api/download', {\n            responseType: 'blob',\n            params: { osName, osTag }\n        })\n        .then(response => {\n            const link = document.createElement('a');\n            const blob = new Blob([response.data]);\n            link.setAttribute('href', window.URL.createObjectURL(blob));\n            link.setAttribute('download', response.headers['content-disposition'].split('filename=')[1]);\n            link.style.visibility = 'hidden';\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n            store.dispatch(initializeForm())\n        })\n        .catch(err => {\n            console.error(new Error(err))\n        })\n    }\n\n    return (\n        <div className=\"App\">\n            <header>\n                <FormControl component=\"fieldset\" onSubmit={e => handleSubmit(e)}>\n                    <FormLabel component=\"legend\">OS</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={<Checkbox\n                                type=\"radio\"\n                                value=\"centos\"\n                                checked={osName === 'centos'}\n                                onChange={() => store.dispatch(changeName(\"centos\"))}\n                            />}\n                            label=\"CentOS\"\n                        />\n                        <FormControlLabel\n                            control={<Checkbox\n                                type=\"radio\"\n                                value=\"ubuntu\"\n                                checked={osName === 'ubuntu'}\n                                onChange={() => store.dispatch(changeName(\"ubuntu\"))}\n                            />}\n                            label=\"Ubuntu\"\n                        />\n                    </FormGroup>\n                    <FormLabel component=\"legend\">TAG</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={<Checkbox\n                                type=\"radio\"\n                                value=\"latest\"\n                                checked={osTag === 'latest'}\n                                onChange={() => store.dispatch(changeTag(\"latest\"))}\n                            />}\n                            label=\"latest\"\n                        />\n                    </FormGroup>\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">submit</Button>\n                </FormControl>\n                <div>\n                    <Button variant=\"contained\" color=\"default\" type=\"button\" onClick={e => handleDownload(e)}>download</Button>\n                </div>\n            </header>\n        </div>\n    )\n}\n\nexport default SelectOS"]},"metadata":{},"sourceType":"module"}